<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on Today I Learned</title>
    <link>https://todayilearned.dev/tags/algorithm/</link>
    <description>Recent content in Algorithm on Today I Learned</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 May 2019 20:50:10 -0400</lastBuildDate>
    
	<atom:link href="https://todayilearned.dev/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>power of two choices</title>
      <link>https://todayilearned.dev/posts/power-of-two-choices/</link>
      <pubDate>Fri, 17 May 2019 20:50:10 -0400</pubDate>
      
      <guid>https://todayilearned.dev/posts/power-of-two-choices/</guid>
      <description>TIL about the Power of Two Choices algorithm used in load balancing, queuing theory and distributed systems in general.
The main takeaway is that it is better to pick two queues at random and choose the one with the least amount of work than finding the best queue and sending a workload there. Why? If we are dealing with many decision makers (as in distributed load balancers for example) and each one choose the best queue disregarding each other choices then all their choices will go to the same queue, overwhelming it.</description>
    </item>
    
  </channel>
</rss>